{"swagger": "2.0", "info": {"title": "API Documentation", "description": "API documentation for the Naulets app/web-app", "version": "v1"}, "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/api/docs/": {"get": {"operationId": "api_docs_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "produces": [], "tags": ["api"]}, "parameters": []}, "/api/schema/": {"get": {"operationId": "api_schema_list", "summary": "OpenApi3 schema for this API. Format can be selected via content negotiation.", "description": "- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json", "parameters": [], "responses": {"200": {"description": ""}}, "produces": ["application/vnd.oai.openapi", "application/yaml", "application/vnd.oai.openapi+json", "application/json"], "tags": ["api"]}, "parameters": []}, "/api/schema/json/": {"get": {"operationId": "api_schema_json_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "produces": ["application/vnd.oai.openapi+json", "application/json"], "tags": ["api"]}, "parameters": []}, "/authentication/api/token/": {"post": {"operationId": "authentication_api_token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["authentication"]}, "parameters": []}, "/authentication/api/token/refresh/": {"post": {"operationId": "authentication_api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["authentication"]}, "parameters": []}, "/core/organizations/": {"get": {"operationId": "core_organizations_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["core"]}, "post": {"operationId": "core_organizations_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["core"]}, "parameters": []}, "/core/projects/": {"get": {"operationId": "core_projects_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["core"]}, "post": {"operationId": "core_projects_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["core"]}, "parameters": []}, "/layout/layout/update/": {"post": {"operationId": "layout_layout_update_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["project", "nodes", "edges"], "type": "object", "properties": {"project": {"description": "Project ID", "type": "string"}, "nodes": {"description": "List of nodes", "type": "array", "items": {"type": "object", "properties": {"id": {"description": "Node ID", "type": "string"}, "name": {"description": "Node Name", "type": "string"}}}}, "edges": {"description": "List of edges", "type": "array", "items": {"type": "object", "properties": {"source": {"description": "Source Node ID", "type": "string"}, "target": {"description": "Target Node ID", "type": "string"}}}}}}}], "responses": {"200": {"description": "Layout updated successfully"}, "400": {"description": "Invalid input"}}, "tags": ["layout"]}, "parameters": []}, "/layout/layout/{project_id}/": {"get": {"operationId": "layout_layout_read", "description": "", "parameters": [{"name": "project_id", "in": "path", "description": "ID of the project", "required": true, "type": "string"}], "responses": {"200": {"description": "Layout retrieved successfully", "examples": {"application/json": {"nodes": [{"id": "string", "name": "string", "node_type": "string", "description": "string", "project": "string", "layout_data": {}}], "edges": [{"source": "string", "source_handle": "string", "target": "string", "target_handle": "string", "identifier": "string"}]}}}, "404": {"description": "Project not found"}}, "tags": ["layout"]}, "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "string"}]}, "/layout/nodes/create/": {"post": {"operationId": "layout_nodes_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["node_type", "name", "project"], "type": "object", "properties": {"node_type": {"description": "Type of the node", "type": "string", "enum": ["1way", "2way", "3way"]}, "name": {"description": "Name of the node", "type": "string"}, "description": {"description": "Description of the node", "type": "string"}, "project": {"description": "Project ID", "type": "string"}}}}], "responses": {"201": {"description": "Node created successfully"}, "400": {"description": "Invalid input"}}, "tags": ["layout"]}, "parameters": []}, "/layout/nodes/run/": {"post": {"operationId": "layout_nodes_run_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["msg", "node"], "type": "object", "properties": {"msg": {"description": "Message to be processed by the node", "type": "string"}, "node": {"description": "Node data", "required": ["id"], "type": "object", "properties": {"id": {"description": "ID of the node", "type": "integer"}}}}}}], "responses": {"200": {"description": "Node run successfully", "examples": {"application/json": {"message": "Node run successfully", "input_message": "string", "node": "string"}}}, "400": {"description": "Invalid input"}, "404": {"description": "Node not found"}}, "tags": ["layout"]}, "parameters": []}, "/layout/nodes/super/": {"get": {"operationId": "layout_nodes_super_list", "description": "", "parameters": [], "responses": {"200": {"description": "List of all super nodes", "examples": {"application/json": [{"id": "integer", "name": "string", "description": "string", "entry_node": "integer", "project": "integer", "node_type": "string"}]}}, "404": {"description": "No super nodes found"}}, "tags": ["layout"]}, "parameters": []}, "/layout/nodes/super/create/": {"post": {"operationId": "layout_nodes_super_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["entry_node_id", "name"], "type": "object", "properties": {"entry_node_id": {"description": "ID of the entry node", "type": "integer"}, "name": {"description": "Name of the super node", "type": "string"}, "description": {"description": "Description of the super node", "type": "string"}}}}], "responses": {"201": {"description": "Super node created successfully", "examples": {"application/json": {"message": "Super node created successfully", "super_node_id": "integer"}}}, "400": {"description": "Invalid input"}, "404": {"description": "Entry node not found"}}, "tags": ["layout"]}, "parameters": []}, "/layout/nodes/update/{node_id}/": {"patch": {"operationId": "layout_nodes_update_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Node"}}], "responses": {"200": {"description": "Node updated successfully", "examples": {"application/json": {"id": "string", "name": "string", "node_type": "string", "description": "string", "project": "string", "layout_data": {}}}}, "400": {"description": "Invalid input"}, "404": {"description": "Node not found"}}, "tags": ["layout"]}, "parameters": [{"name": "node_id", "in": "path", "required": true, "type": "string"}]}, "/tools/tools/": {"get": {"operationId": "tools_tools_list", "description": "", "parameters": [], "responses": {"200": {"description": "List of all tools retrieved successfully", "schema": {"type": "array", "items": {"$ref": "#/definitions/Tool"}}}, "404": {"description": "Tools not found"}}, "tags": ["tools"]}, "parameters": []}, "/tools/tools/get-config/": {"get": {"operationId": "tools_tools_get-config_list", "description": "", "parameters": [{"name": "node_id", "in": "path", "description": "Node ID", "type": "string", "required": true}], "responses": {"200": {"description": "Tool configuration retrieved successfully", "schema": {"$ref": "#/definitions/ToolInstance"}}, "404": {"description": "Node or Tool instance not found"}}, "tags": ["tools"]}, "parameters": []}, "/tools/tools/save-config/": {"post": {"operationId": "tools_tools_save-config_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["node", "tool", "config"], "type": "object", "properties": {"node": {"description": "Node ID", "type": "string"}, "tool": {"description": "Tool ID", "type": "string"}, "config": {"description": "Tool configuration", "type": "object"}}}}], "responses": {"201": {"description": "Tool instance created successfully"}, "400": {"description": "Invalid input data"}}, "tags": ["tools"]}, "parameters": []}}, "definitions": {"TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "Tool": {"required": ["name", "abilities", "input_format", "output_format"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "abilities": {"title": "Abilities", "type": "string", "minLength": 1}, "config": {"title": "Config", "type": "object"}, "input_format": {"title": "Input format", "type": "string", "minLength": 1}, "output_format": {"title": "Output format", "type": "string", "minLength": 1}}}, "ToolInstance": {"required": ["tool"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "tool": {"$ref": "#/definitions/Tool"}, "config": {"title": "Config", "type": "object"}}}, "Node": {"required": ["tool_instance", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "tool_instance": {"$ref": "#/definitions/ToolInstance"}, "node_type": {"title": "Node type", "type": "string", "enum": ["1way", "2way", "3way"]}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string"}, "layout_data": {"title": "Layout data", "type": "object"}, "role_prompt": {"title": "Role prompt", "type": "string"}, "personality_prompt": {"title": "Personality prompt", "type": "string"}, "instructions_prompt": {"title": "Instructions prompt", "type": "string"}, "goal_prompt": {"title": "Goal prompt", "type": "string"}, "entry_node": {"title": "Entry node", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "type": "integer"}}}}}